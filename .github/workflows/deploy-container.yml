name: Build and Push Rondo image

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths:
      - 'Dockerfile'
      - '.github/workflows/deploy-container.yml'
      - 'docker-compose.yml'
      - 'src/**'
      - 'version.txt'
      - 'CHANGELOG.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm/v7,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version number
        id: get_version
        run: |
          VERSION=$(cut -d '=' -f2 version.txt | tr -d '[:space:]')
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Check if tag already exists
        id: tag_exists
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "::set-output name=found::true"
            echo "Tag v${{ env.VERSION }} already exists."
          else
            echo "::set-output name=found::false"
            echo "Tag v${{ env.VERSION }} does not exist."
          fi

      - name: Build and push Docker image
        if: steps.tag_exists.outputs.found != 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm/v7,linux/arm64
          tags: |
            ghcr.io/thequib/rondo:latest
            ghcr.io/thequib/rondo:${{ env.VERSION }}
            ghcr.io/thequib/rondo:${{ github.sha }}

      - name: Create Git tag
        if: steps.tag_exists.outputs.found != 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a v${{ env.VERSION }} -m "Release version ${{ env.VERSION }}"
          git push origin v${{ env.VERSION }}

      - name: Extract release notes from CHANGELOG.md
        id: extract_notes
        run: |
          START_LINE=$(grep -n "^## \[${{ env.VERSION }}\]" CHANGELOG.md | cut -d: -f1)
          END_LINE=$(grep -n -m 1 -A 1 "^## " CHANGELOG.md | tail -n +2 | cut -d: -f1)
          if [ -z "$END_LINE" ]; then
            END_LINE=$(wc -l < CHANGELOG.md)
          fi
          sed -n "${START_LINE},${END_LINE}p" CHANGELOG.md | sed '$d' > release_notes.txt

      - name: Create GitHub Release
        if: steps.tag_exists.outputs.found != 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body_path: ./release_notes.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
